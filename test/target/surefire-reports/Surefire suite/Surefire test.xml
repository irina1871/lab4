<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="LAPTOP-DKODMC83" failures="11" tests="25" name="Surefire test" time="0.133" errors="0" timestamp="2025-10-26T14:49:32 YEKT">
  <testcase classname="org.example.MainTest" name="testFactorial" time="0.01">
    <failure type="java.lang.AssertionError" message="Факториал 5 должен быть равен 100 expected [100] but found [120]">
      <![CDATA[java.lang.AssertionError: Факториал 5 должен быть равен 100 expected [100] but found [120]
at org.example.MainTest.testFactorial(MainTest.java:99)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
... Removed 36 stack frames]]>
    </failure>
  </testcase> <!-- testFactorial -->
  <testcase classname="org.example.MainTest" name="testFactorialNegative" time="0.002"/>
  <testcase classname="org.example.MainTest" name="testFactorialWithDataProvider" time="0.007">
    <failure type="java.lang.AssertionError" message="Факториал 0 должен быть равен 0 expected [0] but found [1]">
      <![CDATA[java.lang.AssertionError: Факториал 0 должен быть равен 0 expected [0] but found [1]
at org.example.MainTest.testFactorialWithDataProvider(MainTest.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
... Removed 36 stack frames]]>
    </failure>
  </testcase> <!-- testFactorialWithDataProvider -->
  <testcase classname="org.example.MainTest" name="testFactorialWithDataProvider" time="0.0">
    <failure type="java.lang.AssertionError" message="Факториал 1 должен быть равен 3 expected [3] but found [1]">
      <![CDATA[java.lang.AssertionError: Факториал 1 должен быть равен 3 expected [3] but found [1]
at org.example.MainTest.testFactorialWithDataProvider(MainTest.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
... Removed 36 stack frames]]>
    </failure>
  </testcase> <!-- testFactorialWithDataProvider -->
  <testcase classname="org.example.MainTest" name="testFactorialWithDataProvider" time="0.002">
    <failure type="java.lang.AssertionError" message="Факториал 5 должен быть равен 125 expected [125] but found [120]">
      <![CDATA[java.lang.AssertionError: Факториал 5 должен быть равен 125 expected [125] but found [120]
at org.example.MainTest.testFactorialWithDataProvider(MainTest.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
... Removed 36 stack frames]]>
    </failure>
  </testcase> <!-- testFactorialWithDataProvider -->
  <testcase classname="org.example.MainTest" name="testFactorialWithDataProvider" time="0.001">
    <failure type="java.lang.AssertionError" message="Факториал 7 должен быть равен 5041 expected [5041] but found [5040]">
      <![CDATA[java.lang.AssertionError: Факториал 7 должен быть равен 5041 expected [5041] but found [5040]
at org.example.MainTest.testFactorialWithDataProvider(MainTest.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
... Removed 36 stack frames]]>
    </failure>
  </testcase> <!-- testFactorialWithDataProvider -->
  <testcase classname="org.example.MainTest" name="testFibonacci" time="0.002"/>
  <testcase classname="org.example.MainTest" name="testFibonacciNegative" time="0.001"/>
  <testcase classname="org.example.MainTest" name="testFindMax" time="0.001">
    <failure type="java.lang.AssertionError" message="Максимальное число должно быть 7 expected [7] but found [9]">
      <![CDATA[java.lang.AssertionError: Максимальное число должно быть 7 expected [7] but found [9]
at org.example.MainTest.testFindMax(MainTest.java:137)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
... Removed 36 stack frames]]>
    </failure>
  </testcase> <!-- testFindMax -->
  <testcase classname="org.example.MainTest" name="testFindMaxEmptyArray" time="0.0"/>
  <testcase classname="org.example.MainTest" name="testFindMaxWithSingleElement" time="0.002"/>
  <testcase classname="org.example.MainTest" name="testIsPalindrome" time="0.002"/>
  <testcase classname="org.example.MainTest" name="testIsPalindromeWithDataProvider" time="0.003">
    <failure type="java.lang.AssertionError" message="Строка &amp;apos;А роза упала на лапу Азора&amp;apos; должна не быть палиндромом expected [false] but found [true]">
      <![CDATA[java.lang.AssertionError: Строка 'А роза упала на лапу Азора' должна не быть палиндромом expected [false] but found [true]
at org.example.MainTest.testIsPalindromeWithDataProvider(MainTest.java:192)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
... Removed 36 stack frames]]>
    </failure>
  </testcase> <!-- testIsPalindromeWithDataProvider -->
  <testcase classname="org.example.MainTest" name="testIsPalindromeWithDataProvider" time="0.0"/>
  <testcase classname="org.example.MainTest" name="testIsPalindromeWithDataProvider" time="0.001">
    <failure type="java.lang.AssertionError" message="Строка &amp;apos;hello&amp;apos; должна быть палиндромом expected [true] but found [false]">
      <![CDATA[java.lang.AssertionError: Строка 'hello' должна быть палиндромом expected [true] but found [false]
at org.example.MainTest.testIsPalindromeWithDataProvider(MainTest.java:192)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
... Removed 36 stack frames]]>
    </failure>
  </testcase> <!-- testIsPalindromeWithDataProvider -->
  <testcase classname="org.example.MainTest" name="testIsPalindromeWithDataProvider" time="0.0">
    <failure type="java.lang.AssertionError" message="Строка &amp;apos;&amp;apos; должна не быть палиндромом expected [false] but found [true]">
      <![CDATA[java.lang.AssertionError: Строка '' должна не быть палиндромом expected [false] but found [true]
at org.example.MainTest.testIsPalindromeWithDataProvider(MainTest.java:192)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
... Removed 36 stack frames]]>
    </failure>
  </testcase> <!-- testIsPalindromeWithDataProvider -->
  <testcase classname="org.example.MainTest" name="testIsPalindromeWithDataProvider" time="0.001">
    <failure type="java.lang.AssertionError" message="Строка &amp;apos;a&amp;apos; должна не быть палиндромом expected [false] but found [true]">
      <![CDATA[java.lang.AssertionError: Строка 'a' должна не быть палиндромом expected [false] but found [true]
at org.example.MainTest.testIsPalindromeWithDataProvider(MainTest.java:192)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
... Removed 36 stack frames]]>
    </failure>
  </testcase> <!-- testIsPalindromeWithDataProvider -->
  <testcase classname="org.example.MainTest" name="testIsPalindromeWithNull" time="0.001"/>
  <testcase classname="org.example.MainTest" name="testIsPrime" time="0.0">
    <failure type="java.lang.AssertionError" message="17 НЕ должно быть простым числом expected [false] but found [true]">
      <![CDATA[java.lang.AssertionError: 17 НЕ должно быть простым числом expected [false] but found [true]
at org.example.MainTest.testIsPrime(MainTest.java:68)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
... Removed 33 stack frames]]>
    </failure>
  </testcase> <!-- testIsPrime -->
  <testcase classname="org.example.MainTest" name="testIsPrimeWithDataProvider" time="0.004"/>
  <testcase classname="org.example.MainTest" name="testIsPrimeWithDataProvider" time="0.0"/>
  <testcase classname="org.example.MainTest" name="testIsPrimeWithDataProvider" time="0.0"/>
  <testcase classname="org.example.MainTest" name="testIsPrimeWithDataProvider" time="0.001"/>
  <testcase classname="org.example.MainTest" name="testIsPrimeWithDataProvider" time="0.001"/>
  <testcase classname="org.example.MainTest" name="testIsPrimeWithDataProvider" time="0.0"/>
</testsuite> <!-- Surefire test -->
